
name: petertestbuild4.yml
run-name: ${{ github.actor }} file petertestbuild4.yml

on: workflow_dispatch

jobs:



  job1:
    runs-on: ubuntu-latest
    outputs:
      my_variable1: ${{ steps.set_variable.outputs.my_variable1 }}
      my_variable2: ${{ steps.set_variable.outputs.my_variable2 }}
    steps:
      - name: Set variables
        id: set_variable
        run: |
            #  echo "::set-output name=my_variable1::123"
            echo "my_variable1=123" >> ${GITHUB_OUTPUT}
            echo "my_variable2=xenv1" >> ${GITHUB_OUTPUT}

  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - name: Use variable from job1
        run: |
            echo "  job1 my_variable1 = ${{needs.job1.outputs.my_variable1}}"
            echo "  job1 my_variable2 = ${{needs.job1.outputs.my_variable2}}"


  terraform_init:
    runs-on: ubuntu-latest
    steps:

      - name: tfstep1
        run: ls -lart || true

      - name: tfstep2
        run: ls -lart .terraform || true


      - name: Checkout code
        uses: actions/checkout@v4

      - name: tfstep3
        run: ls -lart || true

      - name: tfstep4
        run: ls -lart .terraform || true

 
      - name: Get Terraform version
        run: terraform --version || true


      - name: Initialize Terraform
        run: terraform init
        working-directory: terraform/config

      - name: tfstep5
        run: ls -lart || true

      - name: tfstep6
        run: ls -lart .terraform || true

      - name: tfstep6a
        run: ls -lart terraform/config || true

      - name: tfstep6b
        run: ls -lart terraform/config/.terraform || true


  terraform_apply1:
    runs-on: ubuntu-latest
    needs: terraform_init
    steps:

      - name: tfstep1
        run: ls -lart || true

      - name: tfstep2
        run: ls -lart .terraform || true

      - name: Checkout code
        uses: actions/checkout@v4

      - name: tfstep3
        run: ls -lart || true

      - name: tfstep4
        run: ls -lart .terraform || true


      - name: Apply Terraform 1
        run: terraform apply -auto-approve || true
        working-directory: terraform/config

      - name: tfstep5
        run: ls -lart || true

      - name: tfstep6
        run: ls -lart .terraform || true



      - name: Initialize Terraform
        run: terraform init
        working-directory: terraform/config


      - name: tfstep7
        run: ls -lart || true

      - name: tfstep8
        run: ls -lart .terraform || true

      - name: tfstep8a
        run: ls -lart my_folder || true


      - name: Terraform Plan 1
        run: terraform plan || true
        working-directory: terraform/config

        # This will fail
      - name: Apply Terraform 2
        run: terraform apply || true
        working-directory: terraform/config

        # This may fail too
      - name: Apply Terraform 3
        run: terraform apply -input=false  || true
        working-directory: terraform/config

      - name: Apply Terraform 3
        run: terraform apply -input=false  || true
        working-directory: terraform/config


# terraform init -input=false to initialize the working directory.
# terraform plan -out=tfplan -input=false to create a plan and save it to the local file tfplan.
# terraform apply -input=false tfplan to apply the plan stored in the file tfplan.
# 
#     environment:
#       name: ${{ if: needs.job1.result == 'failure' }}  # Conditional environment
#       url: ${{ secrets.TEST_URL }} # Conditional environment URL

# terraform plan -out=tfplan -input=false

      - name: tfstep9
        run: ls -lart || true

      - name: tfstep9a
        run: ls -lart terraform/config || true

      - name: tfstep9b
        run: ls -lart terraform/config/.terraform || true


      - name: tfstep10
        run: ls -lart .terraform || true


      - name: tfstep10a
        run: ls -lart my_folder || true

      - name: tfstep10a
        run: cat my_folder/my_file.txt || true


      - name: tfstep11
        run: ls -lart terraform/config/my_folder || true

      - name: tfstep12
        run: cat terraform/config/my_folder/my_file.txt || true



  terraform_apply2:
    runs-on: ubuntu-latest
    needs: [job1, terraform_apply1]
#     environment: 'env1'
    environment:
#         name:  'env1'
        name:  "${{needs.job1.outputs.my_variable2}}"
        url: https://example.com

    steps:

      - name: tfstep00
        run: |
            echo "  needs.job1.outputs.my_variable1 = ${{needs.job1.outputs.my_variable1}}"
            echo "  needs.job1.outputs.my_variable2 = ${{needs.job1.outputs.my_variable2}}"

      - name: "tfstep01"
        run: |
            echo "  needs.job1.outputs.my_variable1 = ${{needs.job1.outputs.my_variable1}}"
            echo "  needs.job1.outputs.my_variable2 = ${{needs.job1.outputs.my_variable2}}"

      - name: "tfstep02_${{needs.job1.outputs.my_variable2}}"
        run: |
            echo "  needs.job1.outputs.my_variable1 = ${{needs.job1.outputs.my_variable1}}"
            echo "  needs.job1.outputs.my_variable2 = ${{needs.job1.outputs.my_variable2}}"


      - name: tfstep1
        run: ls -lart || true

      - name: tfstep2
        run: ls -lart .terraform || true

      - name: Checkout code
        uses: actions/checkout@v4

      - name: tfstep3
        run: ls -lart || true

      - name: tfstep4
        run: ls -lart .terraform || true


      - name: Apply Terraform 1
        run: terraform apply -auto-approve || true
        working-directory: terraform/config

      - name: tfstep5
        run: ls -lart || true

      - name: tfstep6
        run: ls -lart .terraform || true



      - name: Initialize Terraform
        run: terraform init
        working-directory: terraform/config


      - name: tfstep7
        run: ls -lart || true

      - name: tfstep8
        run: ls -lart .terraform || true

      - name: tfstep8a
        run: ls -lart my_folder || true


      - name: Apply Terraform 2
        run: terraform apply -auto-approve
        working-directory: terraform/config


      - name: tfstep9
        run: ls -lart || true

      - name: tfstep9a
        run: ls -lart terraform/config || true

      - name: tfstep9b
        run: ls -lart terraform/config/.terraform || true


      - name: tfstep10
        run: ls -lart .terraform || true


      - name: tfstep10a
        run: ls -lart my_folder || true

      - name: tfstep10a
        run: cat my_folder/my_file.txt || true


      - name: tfstep11
        run: ls -lart terraform/config/my_folder || true

      - name: tfstep12
        run: cat terraform/config/my_folder/my_file.txt || true


